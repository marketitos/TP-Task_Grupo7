@startuml TPTaskDiagrama

title Task-App

class Tarea {
    - id: number
    - titulo: string
    - descripcion: string
    - fechaVencimiento: Date
    - prioridad: string
    - categoria: string
    - etiqueta: string
    - porcentaje: number
    - estado: string

    + getters()
    + setters()
}

enum PRIORIDAD {
    BAJA
    MEDIA
    ALTA 
}

enum ESTADO {
    INCOMPLETA
    COMPLETA
}

class NodeTarea {
    - _value: Tarea
    - _next: NodeTarea

    + getValue(): Tarea 
    + getNext(): NodeTarea
    + setNext(): NodeTarea
}

class ListaTareas {
    - head: NodeTarea

    + push(v: Tarea): NodeTarea
    + pop(): Tarea
    + insertFirst(v: Tarea): NodeTarea
    + removeFirst(): Tarea
    + insertOrdered(v: Tarea): NodeTarea
    + insertUnique(v: Tarea): NodeTarea
    + delete(v: Tarea): Tarea
    + search(v: Tarea): NodeTarea
    + sort(): void 
    + clear(): void
}

class MainApp {
    - tareas: ListaTareas
    - tareasCompletas: ListaTareas

    + addTask(title: string, desc: string, expDate: Date, prio: string, category: string, tag: string): void
    + removeTask(v: Tarea): Tarea
    + getTareasIncompletas(): ListaTareas
    + getTareasCompletas(): ListaTareas
}

class EditadorDeTareas {
    + editTitle(list: ListaTareas, task: Tarea, title: string): void
    + editDescription(list: ListaTareas, task: Tarea, desc: string): void
    + editExpirationDate(list: ListaTareas, task: Tarea, expDate: Date): void
    + editPriority(list: ListaTareas, task: Tarea, priority: string): void
    + editCategory(list: ListaTareas, task: Tarea, category: string): void
    + editTag(list: ListaTareas, task: Tarea, tag: string): void
    + editPercentage(list: ListaTareas, task: Tarea, percentage: number): void
}

class BuscadorDeTareas {
    + searchByTitle(title: string): Tarea
    + searchByExpirationDate(expirationDate: Date): Tarea
}

class OrdenadorDeTareas {
    + sortByTitle(list: ListaTareas): void
    + sortByExpirationDate(list: ListaTareas): void
    + sortByPriority(list: ListaTareas): void
}

interface SaveData {
    + save(): void
}

class SaveDataJSON implements SaveData {
    + save(): void
}

interface LoadData {
    + load(): void
}

class LoadDataJSON implements LoadData {
    + load(): void
}

Tarea --* NodeTarea
NodeTarea --* NodeTarea
NodeTarea --* ListaTareas
ListaTareas -r-* MainApp
EditadorDeTareas -u-> ListaTareas
BuscadorDeTareas -u-> ListaTareas
OrdenadorDeTareas -l-> ListaTareas


@enduml